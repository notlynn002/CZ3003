; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "DocItem",
"class": "ArgumentDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/argument_doc_item.gd"
}, {
"base": "Reference",
"class": "Calendar",
"language": "GDScript",
"path": "res://addons/calendar_button/class/Calendar.gd"
}, {
"base": "Reference",
"class": "CalendarButtons",
"language": "GDScript",
"path": "res://addons/calendar_button/scripts/calendar_buttons.gd"
}, {
"base": "Control",
"class": "ClassBackend",
"language": "GDScript",
"path": "res://Backend/ClassBackend.gd"
}, {
"base": "DocItem",
"class": "ClassDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/class_doc_item.gd"
}, {
"base": "DocItem",
"class": "ConstantDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/constant_doc_item.gd"
}, {
"base": "HBoxContainer",
"class": "ContributorClass",
"language": "GDScript",
"path": "res://addons/github-integration/scripts/ContributorClass.gd"
}, {
"base": "Reference",
"class": "Date",
"language": "GDScript",
"path": "res://addons/calendar_button/class/Date.gd"
}, {
"base": "Reference",
"class": "Datetime",
"language": "GDScript",
"path": "res://Backend/Datetime.gd"
}, {
"base": "Reference",
"class": "DocExporter",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_exporter/doc_exporter.gd"
}, {
"base": "Reference",
"class": "DocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/doc_item.gd"
}, {
"base": "Reference",
"class": "Error",
"language": "GDScript",
"path": "res://Backend/Error.gd"
}, {
"base": "HTTPRequest",
"class": "FirebaseAuth",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/auth.gd"
}, {
"base": "Control",
"class": "FirebaseContainer",
"language": "GDScript",
"path": "res://addons/godot-firebase/containers/container.gd"
}, {
"base": "Node",
"class": "FirebaseDatabase",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/database.gd"
}, {
"base": "Node",
"class": "FirebaseDatabaseReference",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/reference.gd"
}, {
"base": "Node",
"class": "FirebaseDatabaseStore",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/database_store.gd"
}, {
"base": "Node",
"class": "FirebaseDynamicLinks",
"language": "GDScript",
"path": "res://addons/godot-firebase/dynamiclinks/dynamiclinks.gd"
}, {
"base": "Node",
"class": "FirebaseFirestore",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore.gd"
}, {
"base": "Node",
"class": "FirebaseFunctions",
"language": "GDScript",
"path": "res://addons/godot-firebase/functions/functions.gd"
}, {
"base": "Resource",
"class": "FirebaseResource",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/resource.gd"
}, {
"base": "Node",
"class": "FirebaseStorage",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage.gd"
}, {
"base": "Reference",
"class": "FirebaseUserData",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/user_data.gd"
}, {
"base": "Reference",
"class": "FirestoreCollection",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_collection.gd"
}, {
"base": "Reference",
"class": "FirestoreDocument",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_document.gd"
}, {
"base": "Reference",
"class": "FirestoreQuery",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_query.gd"
}, {
"base": "Reference",
"class": "FirestoreTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_task.gd"
}, {
"base": "Reference",
"class": "FunctionTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/functions/function_task.gd"
}, {
"base": "PanelContainer",
"class": "GistItem",
"language": "GDScript",
"path": "res://addons/github-integration/scripts/GistItem.gd"
}, {
"base": "HBoxContainer",
"class": "InvitationItem",
"language": "GDScript",
"path": "res://addons/github-integration/scripts/InvitationItem.gd"
}, {
"base": "DocItem",
"class": "MethodDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/method_doc_item.gd"
}, {
"base": "DocItem",
"class": "PropertyDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/property_doc_item.gd"
}, {
"base": "Control",
"class": "QuizBackend",
"language": "GDScript",
"path": "res://Backend/QuizBackend.gd"
}, {
"base": "Reference",
"class": "QuizSorter",
"language": "GDScript",
"path": "res://Backend/QuizSorter.gd"
}, {
"base": "PanelContainer",
"class": "RepositoryItem",
"language": "GDScript",
"path": "res://addons/github-integration/scripts/RepositoryItem.gd"
}, {
"base": "DocItem",
"class": "SignalDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/signal_doc_item.gd"
}, {
"base": "Reference",
"class": "StorageReference",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage_reference.gd"
}, {
"base": "Reference",
"class": "StorageTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage_task.gd"
}, {
"base": "Control",
"class": "TowerBackend",
"language": "GDScript",
"path": "res://Backend/TowerBackend.gd"
}, {
"base": "Reference",
"class": "WindowRestrictor",
"language": "GDScript",
"path": "res://addons/calendar_button/scripts/window_restrictor.gd"
} ]
_global_script_class_icons={
"ArgumentDocItem": "",
"Calendar": "",
"CalendarButtons": "",
"ClassBackend": "",
"ClassDocItem": "",
"ConstantDocItem": "",
"ContributorClass": "",
"Date": "",
"Datetime": "",
"DocExporter": "",
"DocItem": "",
"Error": "",
"FirebaseAuth": "",
"FirebaseContainer": "",
"FirebaseDatabase": "",
"FirebaseDatabaseReference": "",
"FirebaseDatabaseStore": "",
"FirebaseDynamicLinks": "",
"FirebaseFirestore": "",
"FirebaseFunctions": "",
"FirebaseResource": "",
"FirebaseStorage": "",
"FirebaseUserData": "",
"FirestoreCollection": "",
"FirestoreDocument": "",
"FirestoreQuery": "",
"FirestoreTask": "",
"FunctionTask": "",
"GistItem": "",
"InvitationItem": "",
"MethodDocItem": "",
"PropertyDocItem": "",
"QuizBackend": "",
"QuizSorter": "",
"RepositoryItem": "",
"SignalDocItem": "",
"StorageReference": "",
"StorageTask": "",
"TowerBackend": "",
"WindowRestrictor": ""
}

[application]

config/name="SSAD game"
run/main_scene="res://Backend/TowerBackend.tscn"
config/icon="res://icon.png"

[autoload]

Firebase="*res://addons/godot-firebase/firebase/firebase.tscn"
PluginSettings="*res://addons/github-integration/scripts/PluginSettings.gd"
IconLoaderGithub="*res://addons/github-integration/scripts/IconLoaderGithub.gd"
UserData="*res://addons/github-integration/scripts/user_data.gd"
RestHandler="*res://addons/github-integration/scenes/RestHandler.tscn"
SELECTED_CHALLENGEES="*res://Game Play/Challenge/GlobalVars.gd"
GlobalArray="*res://Game Play/GlobalArray.gd"
Globals="*res://Globals.tscn"

[display]

window/size/width=1920
window/size/height=1080
window/stretch/mode="2d"
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "res://addons/github-integration/plugin.cfg", "res://addons/godot-firebase/plugin.cfg", "res://addons/http-sse-client/plugin.cfg", "res://addons/silicon.util.custom_docs/plugin.cfg" )

[firebase]

environment_variables/apiKey="AIzaSyARLqns5U0Y_FDySbHbYw6GgNyYbSKtB8I"
environment_variables/authDomain="godotmathgame-c219e.firebaseapp.com"
environment_variables/databaseURL=""
environment_variables/projectId="godotmathgame-c219e"
environment_variables/storageBucket="godotmathgame-c219e.appspot.com"
environment_variables/messagingSenderId="490263875506"
environment_variables/appId="1:490263875506:web:c7ab2813222ee2aff51eab"
environment_variables/measurementId=""
environment_variables/clientId=""
environment_variables/clientSecret=""

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
